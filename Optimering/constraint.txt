include "cumulative.mzn";
include "maximum.mzn";
set of int: ntask = 1..11;

%just for us so we kremember
array[ntask] of string: names = ["HWM12", "HWM34", "HWM56", "Drive1", "Drive2", "HD1", "HD2", "Steer1", "Steer2", "HSM12", "HSM34"];

array[ntask] of int: duration =[5,5,5,10,10,10,10,5,5,5,5];
array[ntask] of int: r40 = [76, 76, 76, 75, 75, 51, 51, 43, 43, 76, 76];
array[ntask] of int: r60 = [95, 95, 95, 109, 109, 61, 61, 62, 62, 95, 95];
array[ntask] of int: r80 = [113, 113, 113, 138, 138, 73, 73, 81, 81, 113, 113];

array[ntask] of var 0..100: startTime;
array[ntask] of var 0..100: endTime;

constraint forall([startTime[i]+duration[i] = endTime[i] | i in ntask]);

int: battery = 100;
int: cpu40 = 25;
int: cpu60 = 31;
int: cpu80 = 37;
int: limit40 = 149+battery-cpu40;
int: limit60 = 120+battery-cpu60;
int: limit80 = 90+battery-cpu80;


%constraint cumulative(startTime, duration, r40, limit40);
%constraint cumulative(startTime, duration, r60, limit60);
constraint cumulative(startTime, duration, r80, limit80);

constraint forall(i in 1..3, j in 4..5)(endTime[i] <= startTime[j]);
constraint forall(i in 1..3, j in 4..5)(startTime[j] <= endTime[i] + 45);

constraint forall(i in 10..11, j in 8..9)(endTime[i] <= startTime[j]);
constraint forall(i in 10..11, j in 8..9)(startTime[j] <= endTime[i] + 45);

constraint endTime[6] <= startTime[8];
constraint endTime[7] <= startTime[9];
constraint endTime[8] <= startTime[4];
constraint endTime[9] <= startTime[5];
constraint endTime[4] <= startTime[5];

var 1..100: maxTime;
constraint maximum(maxTime, endTime);


solve minimize maxTime; 

output [show(names), "\n", show(startTime), "\n", "End Time: ", show(maxTime)];



